{"config":{"lang":["es"],"separator":"[\\s\\-,:!=\\[\\]()\"/]+|\\.(?!\\d)|&[lg]t;|(?!\\b)(?=[A-Z][a-z])","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Introducci\u00f3n","text":"<p>En esta web vamos a encontrar contenidos que resultar\u00e1n \u00fatiles para para iniciarnos en la placa Keyestudio UNO, una versi\u00f3n desarrollada por Keyestudio y distribuida para Espa\u00f1a por INNOVA DIDACTIC.</p> <p> <p> </p> <p></p> <p></p>"},{"location":"Miscelanea/about/","title":"Autor","text":"<p> Federico Coca</p> <ul> <li> <p>GitHub</p> </li> <li> <p>Bluesky</p> </li> <li> <p>Instagram</p> </li> <li> <p>Mas informaci\u00f3n</p> </li> </ul>"},{"location":"Miscelanea/lic/","title":"Licencias","text":"<ul> <li> <p>Licencia MIT incluida en la creaci\u00f3n del repositorio.</p> </li> <li> <p>Creative Commons Atribuci\u00f3n-CompartirIgual 4.0 International (\"CC BY-SA\"). CC BY-SA 4.0 </p> </li> </ul> <p> </p>"},{"location":"Miscelanea/soft/","title":"Software utilizado","text":"<ul> <li> <p>Sistema operativo: Ubuntu 22.04.4 LTS</p> </li> <li> <p>Dibujo 3D FreeCAD</p> </li> <li> <p>Esquemas de montaje creados con Fritzing</p> </li> <li> <p>Paquete ofim\u00e1tico de referencia: LibreOffice</p> </li> <li> <p>Libreria Material para MkDocs</p> </li> <li> <p>Visual Studio Code</p> </li> <li> <p>Creaci\u00f3n de GIF animados para Ubuntu Peek</p> </li> <li> <p>Sistema principal de capturas de pantalla: Shutter</p> </li> <li> <p>Dibujo 2D vectorial Inkscape</p> </li> <li> <p>Retoque de im\u00e1genes GIMP</p> </li> <li> <p>Capturadora de video e im\u00e1gen para webcam XAWVT. Se instala con <code>sudo apt install xawtv</code></p> </li> <li> <p>Grabaci\u00f3n de escritorio con vokoscreen</p> </li> <li> <p>Programaci\u00f3n por bloques con ArduinoBlocks</p> </li> <li> <p>Programaci\u00f3n por bloques con MicroBlocks</p> </li> <li> <p>Programaci\u00f3n mediante el IDE de Arduino</p> </li> </ul>"},{"location":"UNO/contUNO/","title":"Antes de","text":"<p>comenzar a utilizar la placa Keyestudio UNO, tienes que comprobar que tu ordenador tenga instalados los controladores necesarios. Por ello es aconsejable estudiar antes de nada los contenidos de este apartado.</p>"},{"location":"UNO/contUNO/#descripcion","title":"Descripci\u00f3n","text":"<p> <p> </p> <p></p> <p>La placa Keyestudio UNO es una placa basada en el microcontrolador ATmega328P, con la diferencia sobre la versi\u00f3n est\u00e1ndar, de que incorpora una interfaz de tres pines (GND, VCC, Se\u00f1al) para cada una de las entradas y salidas de la placa. Esto facilita enormemente la conexi\u00f3n de sensores y actuadores sin la necesidad de utilizar una protoboard.</p> <p>Los pines de Se\u00f1al (S) se corresponden con los 14 pines digitales y los 6 pines anal\u00f3gicos. Los pines GND (G) se corresponden con masa. Los pines VCC (V) a la tensi\u00f3n de los mismos. Puedes controlar el voltaje VCC mediante un interruptor deslizante para ponerlo a 5V o 3.3V.</p> <p>Cuando se sit\u00faa a 5V, el nivel en el puerto de comunicaci\u00f3n serie es de 5V, el voltaje de los pines es de 5V. Cuando se cambia a 3.3V, el nivel en el puerto de comunicaci\u00f3n serie es de 3.3V, el voltaje de los pines es de 3.3V.</p> <p>Tambi\u00e9n, de forma separada hay dos conjuntos de cuatro pines para comunicaci\u00f3n serie y comunicaci\u00f3n IIC o I2C.</p> <p>Esta placa keyestudio UNO con pines, el chip regulador de voltaje es el MP2307DN. Cuando se conecta a la alimentaci\u00f3n externa, la salida de 5V, la corriente es de 2A.</p> <p>Esta placa puede programarse mediante diversas plataformas y lenguajes, como Arduino IDE con c\u00f3digo basado en C/C++ o entornos de programaci\u00f3n visual como ArduinoBlocks y MicroBlocks.</p>"},{"location":"UNO/contUNO/#componentes-de-la-placa","title":"Componentes de la placa","text":"<p> <p> Componentes de la placa Keyestudio UNO con conector de 3 pines</p> <p></p> <ol> <li>Conector ICSP (In-Circuit Serial Programming). ICSP consta de MOSI, MISO, SCK, RESET, VCC y GND para programar el firmware para ATMEGA 16U2-MU. Este circuito integrado USB a chip, puede convertir la se\u00f1al USB en se\u00f1al de puerto serie.</li> <li>Conector USB-B. Puedes alimentar la placa a trav\u00e9s de la conexi\u00f3n USB o bien puedes cargar los programas a la placa a trav\u00e9s del puerto USB. Conecta la placa al PC mediante un cable USB a trav\u00e9s del puerto USB.</li> <li>Conmutador deslizante. Permite controlar el voltaje en los pines V (VCC) entre 3.3V or 5V.</li> <li>Regulador de tensi\u00f3n. Se encarga de convertir la tensi\u00f3n externa de entrada (5. Conector alimentaci\u00f3n DC) de entre 7 y 12V en 5V si el conmutador est\u00e1 en esa posici\u00f3n. Con la salida a 5V la corriente m\u00e1xima es de 2A.</li> <li>5. Conector alimentaci\u00f3n DC. La placa se puede alimentar con una tensi\u00f3n continua externa de 7 a 12V desde la toma de alimentaci\u00f3n DC.</li> <li>Pines G,V,S (GND, VCC, Se\u00f1al). La placa UNO tiene 6 entradas anal\u00f3gicas, etiquetadas desde A0 a A5. Tambi\u00e9n se pueden utilizar como pines digitales, A0=D14, A1=D15, A2=D16, A3=D17, A4=D18, A5=D19. Estos pines anal\u00f3gicos se pueden conectar mediante conectores hembra tipo dupont individuales o de 2,54mm de paso. Selecciona la tensi\u00f3n de 3,3 V o 5 V mediante el interruptor deslizante.</li> <li>Pines de alimentaci\u00f3n. Pin IOREF, de escasa utilizaci\u00f3n, para configurar la tensi\u00f3n de funcionamiento del microcontrolador. RESET para conectar a un bot\u00f3n externo de reinicio. 3V3 que proporciona una salida de tensi\u00f3n de 3,3 V. 5V que proporciona una salida de tensi\u00f3n de 5 V. Vin es un pin para suministrar a la placa una entrada de tensi\u00f3n externa DC7-12V.</li> <li>Pines anal\u00f3gicos. La placa UNO tiene 6 entradas anal\u00f3gicas, etiquetadas desde A0 a A5. Tambi\u00e9n se pueden utilizar como pines digitales, A0=D14, A1=D15, A2=D16, A3=D17, A4=D18, A5=D19. Estos pineas anal\u00f3gicos se pueden conectar mediante conectores macho tipo dupont individuales.</li> <li>Pines I2C. Conector para comunicaciones I2C de 4 pines (GNC, VCC, SDA y SCL).</li> <li>Bot\u00f3n de RESET. Puedes reiniciar la placa para comenzar el programa desde el estado inicial.</li> <li>Microcontrolador. Cada placa de control tiene su propio microcontrolador o cerebro de la placa. Antes de cargar un nuevo programa debes saber qu\u00e9 circuito integrado hay en tu placa. Esta informaci\u00f3n se puede comprobar en la parte superior del integrado. El microcontrolador utilizado en esta placa es el ATMEGA328P-AU.</li> <li>Conector ICSP (In-Circuit Serial Programming). ICSP consta de MOSI, MISO, SCK, RESET, VCC y GND para programar el firmware para ATMEGA328P-AU.</li> <li>Comunicaci\u00f3n serie. Para conectar la comunicaci\u00f3n serie. 4Pines (GND, VCC, RX, TX).</li> <li>Entradas salidas digitales. Dispone de 14 pines digitales de entrada/salida, etiquetados de D0 a D13 (de los cuales 6 pueden utilizarse como salidas PWM). Estos pines se pueden configurar como pines de entrada digital para leer el valor l\u00f3gico (0 o 1); o utilizarse como pines de salida digital para accionar diferentes m\u00f3dulos como LED, rel\u00e9, etc. Los pines D3, D5, D6, D9, D10 y D11 son PWM. Se pueden conectar mediante dupont macho.</li> <li>Pines I2C. Pines para comunicaciones I2C de 4 pines (GNC, VCC, SDA y SCL).</li> <li>Pines G,V,S (GND, VCC, Se\u00f1al). La placa UNO tiene 14 pines digitales de entrada/salida, etiquetados de D0 a D13 (de los cuales 6 pueden utilizarse como salidas PWM). Los pines D3, D5, D6, D9, D10 y D11 son PWM. Estos pines digitales se pueden conectar mediante conectores hembra tipo dupont individuales o de 2,54mm de paso. Selecciona la tensi\u00f3n de 3,3 V o 5 V mediante el interruptor deslizante.</li> </ol>"},{"location":"UNO/contUNO/#posibilidades-de-la-placa","title":"Posibilidades de la placa","text":"<p>La placa UNO tiene una disposici\u00f3n vers\u00e1til de conectores y una amplia variedad de entradas y salidas. Esto permite crear de forma sencilla toda clase de proyectos interactivos con sensores, actuadores y comunicaciones inal\u00e1mbricas.</p> <p>Algunos ejemplos de proyectos que se pueden realizar en el aula:</p> <ul> <li>MEDIR LA TEMPERATURA</li> </ul> <p>Mediante un sensor de temperatura tipo DHT11 o DHT22 se puede obtener el valor de la temperatura y la humedad en el entorno cercano al sensor. Se puede mostrar a trav\u00e9s de una pantalla o enviarlo a un broker o servidor.</p> <ul> <li>DETECTAR EL NIVEL DE LUZ</li> </ul> <p>A trav\u00e9s de un sensor de luz conectado a una de las entradas anal\u00f3gicas de la placa, se puede medir la intensidad lum\u00ednica de un espacio y activar actuadores en funci\u00f3n de si hay m\u00e1s o menos claridad.</p> <ul> <li>DETECTAR PROXIMIDAD O MOVIMIENTO</li> </ul> <p>Mediante un sensor de tipo Hall (magn\u00e9tico) o un sensor de ultrasonidos conectado a una entrada se puede detectar cu\u00e1ndo un objeto o persona se acerca o se aleja de la placa.</p> <ul> <li>REPRODUCIR AUDIO</li> </ul> <p>Empleando un zumbador se pueden generar tonos y melod\u00edas que puedan formar parte de una experiencia interactiva.</p>"},{"location":"UNO/contUNO/#entorno-de-programacion","title":"Entorno de programaci\u00f3n","text":""},{"location":"UNO/contUNO/#arduinoblocks","title":"Arduinoblocks","text":"<p>ArduinoBlocks http://www.arduinoblocks.com es un entorno de programaci\u00f3n visual por bloques que facilita la programaci\u00f3n de la placa.</p> <p>ArduinoBlocks es compatible con varias placas electr\u00f3nicas, entre ellas la placa Keyestudio UNO. En su entorno de programaci\u00f3n o IDE se pueden distinguir las siguientes partes:</p> <p> <p> Entorno de programaci\u00f3n o IDE de arduinoblocks</p> <p></p> <p> <p> 1 P\u00e1gina principal arduinoblocks 15 Configuraciones de arduinoblocks 2 Repositorio de proyectos 16 Bot\u00f3n para grabar el programa en la placa una vez conectada 3 Desplegar para acceder a nuestros proyectos y para crear un proyecto nuevo 17 Bot\u00f3n para abrir la consola serie. Desplegando podemos abrir serial plotter 4 Acceso a la informaci\u00f3n del proyecto referente a nombre, descripci\u00f3n, etc. 18 Actualizaci\u00f3n puerto. Muestra puerto cuando hay una placa conectada (/dev/ttyUSBn) 5 Acceso a los archivos adjuntos al proyecto 19 Captura de pantalla del programa sin fondo 6 Acceso a herramientas de edici\u00f3n de matrices de leds, pantallas LCD y OLED, Neopixel e informaci\u00f3n RTTTL 20 Espacio para guardar instrucciones y estructuras de programaci\u00f3n y reutilizarlas en el proyecto actual o en otro diferente 7 Bot\u00f3n para compartir el proyecto via correo electr\u00f3nico 21 Bot\u00f3n para maximizar el tama\u00f1o de los bloques 8 Nombre del proyecto con el icono de la placa seleccionada para programar 22 Bot\u00f3n para centrar los bloques 9 Desplegable para acceder a Connector, documentaci\u00f3n varia y librerias usadas por la aplicaci\u00f3n 23 Bot\u00f3n para ampliar el tama\u00f1o de los bloques 10 Idioma del IDE de arduinoblocks 24 Bot\u00f3n para reducir el tama\u00f1o de los bloques 11 Identificaci\u00f3n de la cuenta con la que hemos accedido 25 Papelera para descartar bloques no usados 12 Cerrar la sesi\u00f3n actual 26 Espacio de programaci\u00f3n 13 Botones deshacer y rehacer 27 Bloques de programaci\u00f3n organizados por categorias 14 Bot\u00f3n y un desplegable para guardar y exportar el proyecto 28 Desplegable para mostrar el c\u00f3digo del programa, descargarlo en formato .ino o descargar en formato .zip (se descargan el programa y las librerias <p></p>"},{"location":"UNO/contUNO/#programando-con-arduinoblocks","title":"Programando con arduinoblocks","text":"<p>Para poder conectar y programar la placa Keyestudio UNO con arduinoblocks, es necesario instalar \u201cAB-Connector\u201d para permitir la comunicaci\u00f3n entre el entorno arduinoblocks y la placa electr\u00f3nica.</p> <p>En \"Recursos\" de \"arduinoblocks\" tenemos todas las opciones de descarga y condiciones de instalaci\u00f3n de \u201cAB-Connector\u201d para los sistemas operativos soportados. Para el caso de Ubuntu nos indica:</p> <p> <p> AB-Connector</p> <p></p> <p>Una vez instalado lo podemos encontrar entre las aplicaciones:</p> <p> <p> AB-Connector</p> <p></p> <p>Al abrir AB-Connector, aparece este cuadro de di\u00e1logo que va mostrando informaci\u00f3n sobre la placa y arduinoblocks:</p> <p> <p> AB-Connector en ejecuci\u00f3n</p> <p></p> <p>Dejamos AB-Connector en ejecuci\u00f3n minimizado en segundo plano.</p> <p>1. En ArduinoBlocks, crea una cuenta pulsando en \u201cIniciar sesi\u00f3n\u201d y, posteriormente, en \u201cnuevo usuario\u201d:</p> <p> <p> Pantalla inicial arduinoblocks</p> <p></p> <p>2.  Al entrar en la plataforma te encontrar\u00e1s esta pantalla:</p> <p> <p> Sesi\u00f3n iniciada en arduinoblocks</p> <p></p> <p>3. Al hacer clic en \"Empezar un nuevo proyecto!\" aparece la siguiente pantalla para seleccionar el tipo de proyecto:</p> <p> <p> Nuevo proyecto</p> <p></p> <p>4. Para crear un nuevo proyecto personal, debes rellenar un formulario. Si utilizas la placa Keyestudio UNO, debes seleccionar UNO en Tipo de proyecto.</p> <p> <p> Tipo de proyecto</p> <p></p> <p>5. Una vez creado el proyecto, despu\u00e9s de haber cumplimentado su nombre y dem\u00e1s campos del formulario, se abre el entorno de programaci\u00f3n:</p> <p> <p> Proyecto creado</p> <p></p> <p>6. En la parte izquierda de esta pantalla, encontrar\u00e1s los bloques disponibles clasificados por diferentes categor\u00edas. Por ejemplo, en la siguiente imagen puedes ver los bloques de algunos de los sensores que se pueden controlar con la placa Keyestudio UNO.</p> <p> <p> Algunos bloques de sensores</p> <p></p> <p>7. Arrastra los bloques al espacio de programaci\u00f3n para programar tu placa. Por ejemplo, podemos programar el env\u00edo en bucle de un mensaje por puerto serie. El puerto serie, tambi\u00e9n conocido como puerto de comunicaciones serie o interfaz serie, es un tipo de conexi\u00f3n utilizada en ordenadores y dispositivos perif\u00e9ricos para la transferencia de datos. La caracter\u00edstica principal del puerto serie es que env\u00eda los datos en serie; es decir, bit a bit, a trav\u00e9s de un solo canal o hilo. Los bloques m\u00e1s importantes para utilizar el puerto serie son:</p> <p> <p> Bloques puerto serie</p> <p></p> <p>8. El programa de este ejemplo ser\u00eda as\u00ed:</p> <p> <p> Programa Hola mundo. Descargar</p> <p></p> <p>Dentro de la estructura \u201cInicializar\u201d colocamos el bloque de configuraci\u00f3n de la velocidad de transferencia de datos (\u201cbaudrate\u201d) del puerto serie a 9600. Y en el bucle principal, colocamos el bloque para enviar un mensaje en concreto, seleccionando que se realice un salto de l\u00ednea. Para que el mensaje no se muestre tan rapidamente hacemos que se reproduzca cada cierto tiempo.</p> <p>9. Una vez creado el programa, debes transferirlo (subirlo) a la placa. Para ello, sigue los siguientes pasos:</p> <ul> <li>Comprueba que AB-Connector est\u00e1 ejecuta\u0144dose.</li> <li>Conecta la placa al ordenador mediante un cable USB.</li> <li>Selecciona el puerto de comunicaci\u00f3n. Puedes conectar y desconectar el cable USB del ordenador para diferenciar cu\u00e1l es el puerto de comunicaci\u00f3n que utiliza la placa.</li> <li>Si no aparece el \"/dev/ttyACM\" directamente, pulsa en el icono de actualizaci\u00f3n. En entornos Linux, MacOS y Chromebook se muestra as\u00ed el nombre. En Windows se muestra como COM.</li> </ul> <p> <p> Establecer conexi\u00f3n USB</p> <p></p> <ul> <li>Pulsando en el bot\u00f3n \u201cSubir\u201d, carga el programa en la placa.</li> </ul> <p> <p> Subir el programa a la placa</p> <p></p> <p>Para poder visualizar el monitor serie y comprobar qu\u00e9 mensajes est\u00e1 enviando la placa al ordenador, debes abrirlo en tu entorno de programaci\u00f3n, pulsando el bot\u00f3n \u201cConsola\u201d:</p> <p> <p> Abrir consola serie</p> <p></p> <p>10. Se abrir\u00e1 la ventana siguiente:</p> <p> <p> Consola serie</p> <p></p> <p>11. Selecciona la tasa de baudios (velocidad de transmisi\u00f3n de datos) con la que has iniciado el puerto serie y despu\u00e9s haz clic en conectar. Ver\u00e1s el resultado en pantalla.</p> <p> <p> Consola serie recibiendo datos</p> <p></p>"},{"location":"UNO/contUNO/#arduino-ide","title":"Arduino IDE","text":"<p>Arduino IDE es un Entorno de Desarrollo Integrado multiplataforma (Linux, Windows y macOS) ideal para programar placas tipo Arduino y compatibles, como es el caso de la placa Keyestudio UNO, con un lenguaje de programaci\u00f3n basado en C/C++.</p> <p>IDE (Integrated Development Environment, traducido como Entorno Integrado de Desarrollo) incorpora un editor de c\u00f3digo que facilita la escritura de programas. Tambi\u00e9n dispone de numerosas bibliotecas y ejemplos que ayudan a la programaci\u00f3n.</p> <p>Permite compilar y subir los programas a la placa con tan s\u00f3lo un clic, visualizando el resultado a trav\u00e9s del monitor serie, por ejemplo.</p> <p>En el entorno de programaci\u00f3n se pueden distinguir las siguientes partes:</p>"},{"location":"UNO/contUNO/#descarga","title":"Descarga","text":"<p>Podemos descargarlo desde la p\u00e1gina de software de Arduino IDE 2.0 y en el momento de creaci\u00f3n de este apartado de la web nos ofrece la versi\u00f3n 2.3.2 adem\u00e1s de los enlaces al editor online, tal y como vemos en la figura siguiente.</p> <p> <p> Descargas</p> <p></p> <p>En esta p\u00e1gina tenemos disponibles las versiones Nightly y otras informaciones importantes como:</p> <ul> <li>La versi\u00f3n de escritorio no est\u00e1 disponible para Chromebook donde deberemos trabajar con el editor web de Arduino.</li> <li>Es posible programar las placas utilizando MicroPython. En la p\u00e1gina MicroPython with Arduino tenemos toda la informaci\u00f3n.</li> <li>Opciones de descarga de versiones anteriores del IDE.</li> <li>T\u00e9rminos de servicio</li> </ul> <p>Si tenemos alguna duda podemos seguir el tutorial en ingl\u00e9s de descarga e instalaci\u00f3n de Arduino IDE 2.0.</p>"},{"location":"UNO/contUNO/#ventana-principal-del-ide","title":"Ventana principal del IDE","text":"<p>En la figura siguiente vemos el aspecto que presenta el IDE en la versi\u00f3n 2.0.</p> <p> <p> Arduino IDE 2.0</p> <p></p> <p>A continuaci\u00f3n se describen de forma r\u00e1pida los apartados se\u00f1alados en la figura anterior.</p> <ol> <li>Verify/Upload (Verificar/Cargar): Para compilar y cargar el c\u00f3digo en la placa.</li> <li>Select board &amp; port (Seleccionar placa y puerto): En el desplegable se muestran las placas detectadas de forma autom\u00e1tica, junto con el puerto asignado.</li> <li>Open Serial Plotter (abrir trazador ser\u00ede): Abre la herramienta de graficado como una nueva ventana.</li> <li>Open Serial Monitor (abrir el monitor serie): abre la herramienta Serial Monitor, como una nueva pesta\u00f1a en la consola.</li> <li>Sketchbook (Carpeta de programas): es el directorio o carpeta donde se almacenan localmente los programas. Adem\u00e1s, desde aqu\u00ed se puede sincronizar con Arduino Cloud y tambi\u00e9n obtener los sketch del entorno online.</li> <li>Boards Manager (Administrador de placas): para explorar los paquetes de Arduino y de terceros que se pueden instalar. Por ejemplo, usar una placa MKR WiFi 1010 requiere tener instalado el paquete Arduino SAMD Boards.</li> <li>Library Manager (Ad https://docs.arduino.cc/software/ide-v2./img/teo-basica/soft/ministrador de librer\u00edas): Para navegar por las librer\u00edas propias de Arduino y las creadas por la comunidad.</li> <li>Debugger (Depurador): Para probar y depurar programas en tiempo real.</li> <li>Search (Buscar): b\u00fasqueda de palabras en el c\u00f3digo.</li> </ol>"},{"location":"UNO/contUNO/#caracteristicas-principales-del-ide-20","title":"Caracter\u00edsticas principales del IDE 2.0","text":"<ul> <li>Ajustar preferencias En la animaci\u00f3n de la figura siguiente vemos como acceder a la configuraci\u00f3n de las mismas y tambi\u00e9n como se realiza alg\u00fan ajuste adicional.</li> </ul> <p> <p> Preferencias IDE 2.0</p> <p></p> <ul> <li>La carpeta de programas Los programas o sketches de Arduino se guardan como .ino y deben almacenarse en una carpeta con el mismo nombre. Por ejemplo, un programa de nombre 'mi_programa.ino' debe almacenarse en una carpeta llamada 'mi_programa'. Generalmente se guardan en una carpeta de nombre 'Arduino' en la carpeta personal. En la animaci\u00f3n siguiente vemos como abrir y cerrar esta carpeta desde el bot\u00f3n de la barra lateral y como nos muestra el contenido</li> </ul> <p> <p> Carpeta de programas</p> <p></p> <ul> <li>Administrador de placas Con el Administrador de placas se pueden buscar e instalar paquetes o \"n\u00facleos\" para nuestras placas. Compilar y cargar un programa en una placa siempre requiere un paquete de la placa. Hay muchos paquetes de placa Arduino disponibles, como avr, samd, megaav y muchos m\u00e1s. Podemos decir que un \"n\u00facleo\" est\u00e1 escrito y dise\u00f1ado para microcontroladores espec\u00edficos y sabemos que las diferentes placas tienen micros de diferentes tipos. Por ejemplo, un Arduino UNO tiene un ATmega328P, que usa el n\u00facleo AVR, mientras que un Arduino Nano 33 IoT tiene un microcontrolador SAMD21, donde necesitamos usar el n\u00facleo SAMD. En definitiva, para poder usar una placa concreta debemos instalar su n\u00facleo espec\u00edfico. Al hacer clic en el bot\u00f3n de la barra lateral se nos abren todas las opciones disponibles y ne indica si est\u00e1n o no instalados y adem\u00e1s dispone de un buscador que permite localizar el n\u00facleo que necesitamos. Hay que tener presente que la instalaci\u00f3n de algunos de ellos puede tardar varios minutos. En la animaci\u00f3n vemos el funcionamiento de este bot\u00f3n.</li> </ul> <p> <p> Administrador de placas</p> <p></p> <ul> <li>Gestor de librer\u00edas Este bot\u00f3n nos permite buscar e instalar librer\u00edas, que son extensiones de la API de Arduino que facilitan el control de un servo, leer un sensor espec\u00edfico o utilizar un m\u00f3dulo WiFi. En la animaci\u00f3n vemos como utilizar este bot\u00f3n.</li> </ul> <p> <p> Gestor de librer\u00edas</p> <p></p> <ul> <li>Monitor serie Esta herramienta que habitualmente estaba en una ventana separada ahora se integra en el editor. La herramienta sirve para comunicarse con la placa o para depurar programas. Una ventaja de tener el Serial Monitor integrado con el editor es la posibilidad de tener m\u00faltiples monitores abiertos simult\u00e1neamente. En el editor antiguo, al cambiar el puerto/placa, cambiaba en todas las ventanas. Adem\u00e1s, est\u00e1bamos limitados a una ventana de Serial Monitor, un obst\u00e1culo que el IDE 2.0 elimina. En la animaci\u00f3n vemos el uso b\u00e1sico del mismo.</li> </ul> <p> <p> Monitor serie</p> <p></p> <p>Para obtener m\u00e1s informaci\u00f3n sobre Serial Monitor podemos visitar el Serial Monitor tutorial.</p> <ul> <li>Serial Plotter Nos permite visualizar datos utilizando gr\u00e1ficos permitiendo monitorizar varias variables de manera simultanea. Para ver mejor el funcionamiento de este elemento vamos a utilizar un potenci\u00f3metro conectado al pin anal\u00f3gico A3 junto con una variable est\u00e1tica y una aleatoria. El c\u00f3digo del ejemplo es:</li> </ul> <pre><code>int potenciometro;\nint aleatoria;\nint static_variable = 500;\n\nvoid setup() {\n  Serial.begin(9600);\n}\n\nvoid loop() {\npotenciometro = analogRead(A3);\naleatoria = random(0, 1000);\n  Serial.print(\"Potenciometro:\");\n  Serial.print(potenciometro);\n  Serial.print(\",\");\n  Serial.print(\"Valor aleatorio:\");\n  Serial.print(aleatoria);\n  Serial.print(\",\");\n  Serial.print(\"Variable estatica:\");\n  Serial.println(static_variable);\n}\n</code></pre> <p>En la animaci\u00f3n vemos como cargar el programa y el funcionamiento en la ventana del Serial Plotter.</p> <p> <p> Serial Plotter</p> <p></p> <ul> <li> <p>Debugger El depurador se utiliza para probar y depurar programas. B\u00e1sicamente lo que permite es navegar a trav\u00e9s de la ejecuci\u00f3n de un programa, lo que sirve para detectar fallos o errores de c\u00f3digo. El depurador solamente est\u00e1 disponible con las placas SAMD. Tenemos mas informaci\u00f3n en Debugging tutorial.</p> </li> <li> <p>Autocompletado Es una nueva caracter\u00edstica de la versi\u00f3n 2.0 muy bien equipada. Debemos tener presente que para que funcione debemos tener seleccionada la placa a utilizar. En la animaci\u00f3n siguiente vemos la herramienta funcionando.</p> </li> </ul> <p> <p> Autocompletado</p> <p></p>"},{"location":"UNO/contUNO/#programando-con-arduino-ide","title":"Programando con Arduino IDE","text":"<p>1. Para poder programar la placa Keyestudio UNO en el entorno Arduino IDE, es necesario que conectes la placa al ordenador con un cable USB y la selecciones en el desplegable \u201cSelecccione placa y puerto\u201d.</p> <p> <p> Seleccionar placa y puerto</p> <p></p> <p>2. Y selecciona la placa \u201cArduino UNO\u201d y el puerto adecuado en la ventana que se abre:</p> <p> <p> Seleccionados placa y puerto</p> <p></p> <p>3. Una vez configurado el entorno, vamos a programar el env\u00edo en bucle de un mensaje por puerto serie. Copiamos el c\u00f3digo del programa de arduinoblocks y quedar\u00eda as\u00ed:</p> <p> <p> Programa Hola mundo</p> <p></p> <p>Se ha cambiado el tiempo a un segundo para asegurarnos que el programa es diferente al de arduinoblocks. Este es el c\u00f3digo del programa listo para copiar:</p> <pre><code>unsigned long task_time_ms=0;\n\nvoid setup()\n{\n  // Inicar puerto serie a 9600 buadios\n    Serial.begin(9600);\n  // Espera a que se complete la transmision de datos serie\n    Serial.flush();\n    while(Serial.available()&gt;0)Serial.read();\n}\n\nvoid loop()\n{\n  // millis() retorna los milisegundos desde que se inicio el programa\n    if((millis()-task_time_ms)&gt;=1000){\n    task_time_ms=millis();\n    // Envia mensaje por puerto serie\n    Serial.println(String(\"Hola mundo\"));\n  }\n}\n</code></pre> <p>4. Dentro de la estructura \u201csetup()\u201d se a\u00f1ade la instrucci\u00f3n \u201cSerial.begin(9600);\u201d para configurar la velocidad de transferencia de datos (\u201cbaudrate\u201d) del puerto serie a 9600. En el bucle principal, el \u201cloop()\u201d, a\u00f1adimos la instrucci\u00f3n \"Serial.println();\" para enviar un mensaje. Cargamos el programa en la placa clicando el bot\u00f3n de carga:</p> <p> <p> Cargar el programa Hola mundo</p> <p></p> <p>5. Abrimos la consola serie para visualizar los datos que recibe el ordenador desde la placa mediante la comunicaci\u00f3n serie:</p> <p> <p> Programa Hola mundo en ejecuci\u00f3n</p> <p></p>"},{"location":"UNO/contUNO/#seguridad","title":"Seguridad","text":"<p>A la hora de utilizar la placa keyestudio UNO, es fundamental seguir unas pautas de seguridad para garantizar tanto el buen funcionamiento de la placa como la seguridad de los usuarios. A continuaci\u00f3n, se exponen varios consejos clave:</p> <ul> <li>Evita cortocircuitos: Hay que asegurarse de que la placa no est\u00e9 alimentada cuando se manipulan materiales y herramientas conductores de electricidad. Esto ayuda a prevenir cortocircuitos inesperados que podr\u00edan da\u00f1ar la placa o causar accidentes.</li> <li>Manipula la placa con cuidado: Los pines donde se conectan componentes diversos son delicados y pueden romperse o doblarse si se aplica una gran fuerza o palanca. Hay que ser especialmente prudente en la manipulaci\u00f3n y evitar ca\u00eddas o golpes que puedan afectar a la placa.</li> <li>Controla la temperatura: Es necesario tener en cuenta que la temperatura de la placa puede aumentar considerablemente durante el uso prolongado. Algunos componentes pueden calentarse y es importante evitar el contacto directo para prevenir quemaduras o da\u00f1os en la placa.</li> <li>Revisa regularmente los componentes: Es conveniente comprobar regularmente el estado de los componentes electr\u00f3nicos y las conexiones. Los conectores sueltos o desgastados pueden causar un mal funcionamiento de la placa o ser un riesgo de seguridad.</li> <li>Usa adecuadamente la alimentaci\u00f3n: Utiliza s\u00f3lo las fuentes de alimentaci\u00f3n recomendadas. Un voltaje incorrecto puede da\u00f1ar la placa o incluso ser peligroso, ya que puede producir sobrecalentamiento de componentes o cortocircuitos.</li> <li>Mant\u00e9n la placa en un entorno seco y limpio: La presencia de l\u00edquidos o polvo puede causar cortocircuitos o da\u00f1ar los componentes de la placa.</li> </ul> <p>Siguiendo estos consejos, podr\u00e1s disfrutar de una experiencia segura y enriquecedora con la placa programable.</p>"},{"location":"UNO/externos/","title":"Programar sensores externos","text":""},{"location":"UNO/externos/#actividades","title":"Actividades","text":"<p>A continuaci\u00f3n se relacionan las actividades desarrolladas con algunos de los tipos de sensores y actuadores que usualmente se suelen tener disponibles o que forman parte de proyectos interesantes.</p> <p>Por seguridad</p> <p>Es muy conveniente tener la placa desprovista de cualquier tipo de alimentaci\u00f3n mientras realizamos el conexionado de elementos. En caso contrario se pueden producir despefectos irreversibles en cualquiera de los elementos.</p>"},{"location":"UNO/externos/#humedad-del-suelo","title":"Humedad del suelo","text":""},{"location":"UNO/externos/#material-necesario","title":"Material necesario","text":"<ul> <li>Placa Keyestudio UNO</li> <li>Sensor de humedad del suelo (KS0049)</li> <li>Cable GVS o 3 cables dupont hembra-hembra</li> <li>Ordenador. Antes de empezar a utilizar la placa Keyestudio UNO, es necesario comprobar que nuestro dispositivo est\u00e9 listo para trabajar. Encontrar\u00e1s toda la informaci\u00f3n en Antes de.</li> </ul>"},{"location":"UNO/externos/#procedimiento","title":"Procedimiento","text":"<p>1. Conecta el sensor de humedad de suelo a la placa utilizando un cable de tipo GSV o tres cables dupont hembra-hembra. El pin a utilizar ser\u00e1 el A0.</p> <p> <p> Conexionado</p> <p></p> <p>CUIDADO</p> <p>Si utilizas cables dupont, controla que cada cable conecte los terminales correspondientes de la placa y de la pantalla (GND con GND, VCC con VCC y S con S).</p> <p>Si utilizas un conector GSV ten cuidado de respetar el orden de los pines, es decir, que las conexiones son las mismas que con cables individuales.</p> <p>2. Ejecuta el programa AB-Connector. Recuerda que debe estar en ejecuci\u00f3n todo el rato mientras trabajas con Arduinoblocks.</p> <p>3. Ve a ArduinoBlocks, inicia sesi\u00f3n y comienza un nuevo proyecto del tipo \u201cUNO\u201d:</p> <p> <p> Proyecto KS_UNO_Humedad_suelo. Creaci\u00f3n</p> <p></p> <p>4. En la categoria de \"Comunicaciones\" busca \"Puerto Serie\" y coloca en \"Inicializar\" un bloque \"Iniciar baudios 9600\".</p> <p> <p> Proyecto KS_UNO_Humedad_suelo. Iniciar puerto serie</p> <p></p> <p>5. En \"Bucle\" sit\u00faa un bloque \"Enviar\" dejando activado el salto de l\u00ednea.</p> <p> <p> Proyecto KS_UNO_Humedad_suelo. Enviar puerto serie</p> <p></p> <p>6. En la categor\u00eda \u201cSensores\u201d, busca el sensor para medir la humedad del suelo (KS0049) y sit\u00faa el bloque correspondiente en el espacio vac\u00edo que hay en \u201cEnviar\u201d. Aparece como \"Sonda de humedad\" y la imagen del sensor. F\u00edjate que indica a qu\u00e9 pin se debe conectar el sensor. Puedes elegir el pin que desees de los que salen en el desplegable, teniendo en cuenta que el pin que selecciones en el bloque ser\u00e1 el que debes utilizar para realizar la conexi\u00f3n (en nuestro caso A0). Tambi\u00e9n puedes elegir entre ver la lectura en porcentaje (%) o en valor absoluto (0\u20261023). Pon tambi\u00e9n una espera de un segundo a continuaci\u00f3n despu\u00e9s del bloque enviar para evitar que haga las lecturas demasiado seguidas.</p> <p> <p> Proyecto KS_UNO_Humedad_suelo</p> <p></p> <p>7. Subimos el proyecto a la placa haciendo clic en el bot\u00f3n \"Subir\". Una vez compilado y subido correctamente el programa, haz clic en \"Consola\" y despu\u00e9s en \"Conectar\".</p> <p> <p> Proyecto KS_UNO_Humedad_suelo. Completo - Consola</p> <p></p> <p>Comenzar\u00e1s a ver valores medidos por el sensor en la consola o terminal serie.</p> <p>8. Tambi\u00e9n se pueden combinar bloques de texto, de la categoria \"Texto\", con las medidas efectuadas por el sensor. En el ejemplo siguiente se han realizados cambios al respecto:</p> <p> <p> Proyecto KS_UNO_Humedad_suelo_v2</p> <p></p> <p>La consola se ver\u00e1 ahora de la siguiente forma:</p> <p> <p> Proyecto KS_UNO_Humedad_suelo. Completo - Consola</p> <p></p>"},{"location":"UNO/externos/#sensor-de-luz-ambiente","title":"Sensor de luz ambiente","text":"<p>Una alternativa a la fotorresistencia muy sencillo de utilizar es el sensor de luz ambiental TEMT6000. Se supone que el TEMT6000 est\u00e1 adaptado a la sensibilidad del ojo humano, pero he comprobado que su rendimiento es malo en condiciones de poca luz.</p> <p>No obstante, funciona muy bien reaccionando a cambios muy peque\u00f1os en un ambiente de buena luminosidad. Debido a que est\u00e1 dise\u00f1ado para imitar el ojo humano, no reacciona bien a la luz IR o UV, as\u00ed que aseg\u00farate de tenerlo en cuenta cuando lo utilices en tu proyecto.</p>"},{"location":"UNO/externos/#material-necesario_1","title":"Material necesario","text":"<ul> <li>Placa Keyestudio UNO</li> <li>Sensor de luz ambiental TEMT6000</li> <li>Cable I2C o 4 cables dupont hembra-hembra</li> <li>Cable GVS o 3 cables dupont hembra-hembra</li> <li>Matriz de LED 8x8 I2C HT16K33 (KS0064)</li> <li>Matriz de LED 8x8 I2C HT16K33 direccionable (KS0396)</li> <li>Ordenador. Antes de empezar a utilizar la placa Keyestudio UNO, es necesario comprobar que nuestro dispositivo est\u00e9 listo para trabajar. Encontrar\u00e1s toda la informaci\u00f3n en Antes de.</li> </ul>"},{"location":"UNO/externos/#procedimiento_1","title":"Procedimiento","text":"<p>1. Conecta el sensor de humedad de luz ambiental al pin A0 utilizando un cable de tipo GSV o tres cables dupont hembra-hembra. Mediante un hub o expansor I2C conecta las dos matrices de 8x8 al puerto I2C de la placa.</p> <p> <p> Conexionado</p> <p></p> <p>CUIDADO</p> <p>Si utilizas cables dupont, controla que cada cable conecte los terminales correspondientes de la placa y de la pantalla (GND con GND, VCC con VCC y S con S).</p> <p>Si utilizas un conector GSV ten cuidado de respetar el orden de los pines, es decir, que las conexiones son las mismas que con cables individuales.</p> <p>2. Ejecuta el programa AB-Connector. Recuerda que debe estar en ejecuci\u00f3n todo el rato mientras trabajas con Arduinoblocks. Iniciamos un nuevo proyecto de tipo \"UNO\".</p> <p>3. Vamos a configurar \"Inicializar\" localizando y adaptando los bloques para tener dos matrices de 8x8 con dos direcciones diferentes, inicializar una variable donde almacenar los valores medidos por el sensor e iniciar el puerto serie.</p> <p> <p> Bloque Inicializar del proyecto KS_UNO_claro_oscuro</p> <p></p> <p>4. En \"Bucle\" vamos a hacer que en la variable se guarde la lectura del sensor mostrando el resultado por el puerto serie cada segundo. Si la luz ambiente es igual o est\u00e1 por debajo de un valor (lo adaptas a tu resultado de medida) va a significar oscuridad mostr\u00e1ndose una carita triste en la matriz 1 mientras en la matriz 2 se iluminan los 4 LEDs centrales. Si la luz ambiente es mayor que ese valor la matriz 2 mostrar\u00e1 una carita feliz mientras que en la matriz 1 se iluminan los 4 LEDs de las esquinas significando que hay bastante claridad.</p> <p> <p> Bloque Bucle del proyecto KS_UNO_claro_oscuro</p> <p></p> <p>5. El proyecto completo ser\u00e1:</p> <p> <p> Proyecto KS_UNO_claro_oscuro</p> <p></p> <p>6. Subimos el proyecto a la placa, conectamos la consola y vemos el valor que nos da el sensor (en mi caso la medida est\u00e1 en torno al 10%). Adaptamos el valor de la comparaci\u00f3n en el bucle y volvemos a subir el proyecto si es necesario. En la animaci\u00f3n podemos ver el funcionamiento del proyecto:</p> <p> <p> Proyecto KS_UNO_claro_oscuro. Funcionamiento</p> <p></p>"},{"location":"UNO/externos/#sensor-de-co2","title":"Sensor de CO2","text":"<p>El sensor de di\u00f3xido de carbono es un sensor de calidad del aire que utiliza el chip CCS811. Se trata de un sensor digital de gas en miniatura de potencia ultrabaja que puede detectar una amplia gama de compuestos org\u00e1nicos vol\u00e1tiles (COV), incluidos los niveles de di\u00f3xido de carbono equivalente (eCO2) y \u00f3xido met\u00e1lico (MOX). El di\u00f3xido de carbono equivalente (eCO2) se mide en un rango de 400 a 29206 ppm (partes por mill\u00f3n), y diversos compuestos org\u00e1nicos vol\u00e1tiles (TVOC) en un rango de 0 a 32768 ppb (partes por bill\u00f3n).</p> <p> <p> Sensor de CO2</p> <p></p> <p>En arduinoblocks est\u00e1 disponible un bloque para el sensor que devuelve el nivel de CO2 detectado tanto en ppm como en mg/m3 y el TVOC en ppb.</p> <p> <p> Bloque para sensor de CO2</p> <p></p>"},{"location":"UNO/externos/#material-necesario_2","title":"Material necesario","text":"<ul> <li>Placa Keyestudio UNO</li> <li>Sensor CCS811 Sensor de eCO2 (Di\u00f3xido de Carbono Equivalente) y TVOC conexi\u00f3n I2C (KS0457)</li> <li>Cable I2C o 4 cables dupont hembra-hembra</li> <li>Ordenador. Antes de empezar a utilizar la placa Keyestudio UNO, es necesario comprobar que nuestro dispositivo est\u00e9 listo para trabajar. Encontrar\u00e1s toda la informaci\u00f3n en Antes de.</li> </ul>"},{"location":"UNO/externos/#procedimiento_2","title":"Procedimiento","text":"<p>1. Conecta el sensor de CO2 al conector I2C utilizando un cable de tipo I2C o cuatro cables dupont hembra-hembra.</p> <p> <p> Conexionado</p> <p></p> <p>Es muy importante conectar el pin WAKE a GND para el correcto funcionamiento del sensor</p> <p>CUIDADO</p> <p>Si utilizas cables dupont, controla que cada cable conecte los terminales correspondientes de la placa y de la pantalla (GND con GND, VCC con VCC, SDA con SDA y SCL con SCL).</p> <p>Si utilizas un conector I2C ten cuidado de respetar el orden de los pines, es decir, que las conexiones son las mismas que con cables individuales.</p> <p>2. Ejecuta el programa AB-Connector. Recuerda que debe estar en ejecuci\u00f3n todo el rato mientras trabajas con Arduinoblocks. Iniciamos un nuevo proyecto de tipo \"UNO\".</p> <p>3. Vamos a configurar \"Inicializar\" para trabajar con la consola serie. En el bucle vamos a inicializar las variables donde almacenar los valores medidos por el sensor en sus tres modos posibles. Enviaremos cada valor medidos a una l\u00ednea con un texto indicativo, su valor y la unidad de medida. El programa ser\u00e1 el siguiente:</p> <p> <p> Proyecto KS_UNO_CO2</p> <p></p> <p>4. Subimos el proyecto a la placa, conectamos la consola y vemos los valores medidos por el sensor.</p> <p> <p> Proyecto KS_UNO_CO2. Consola</p> <p></p> <p>Los valores que vemos en la gr\u00e1fica se han forzado para el ejemplo introduciendo el sensor en una nube de IPA (alcohol isoprop\u00edlico).</p>"},{"location":"UNO/externos/#acelerometro-de-tres-ejes","title":"Aceler\u00f3metro de tres ejes","text":"<p>El m\u00f3dulo ADXL345 es un aceler\u00f3metro MEMS (MicroelEctroMechanical Systems) o sistema microelectromec\u00e1nico de 3 ejes, con una resoluci\u00f3n (13 bits) de medici\u00f3n de hasta \u00b116g de fuerza gravitacional. Los datos de salida los entrega en formato digital en complemento a dos de 16 bits y se puede acceder a ellos a trav\u00e9s de una interfaz digital I2C.</p> <p>El ADXL345 es ideal para medir la aceleraci\u00f3n est\u00e1tica de la gravedad en aplicaciones de detecci\u00f3n de inclinaci\u00f3n, as\u00ed como la aceleraci\u00f3n din\u00e1mica resultante del movimiento o impacto.</p> <p> <p> Sensor aceler\u00f3metro de tres ejes ADXL345</p> <p></p> <p>En arduinoblocks est\u00e1 disponible un bloque para el sensor en el que se pueden seleccionar las opciones que vemos a continuaci\u00f3n:</p> <p> <p> Bloque para sensor ADXL345</p> <p></p> <p>Los conceptos que vemos en la imagen anterior se refieren a la rotaci\u00f3n del eje X (Roll) y la rotaci\u00f3n del eje Y (Pitch). Se ha prescindido del eje Z (Yaw). Para aprender mas sobre estos conceptos visita este enlace al blog de Luis Llamas. En la explicaci\u00f3n estos conceptos dada en la Wikipedia respecto a los Aircraft principal axes o ejes del avi\u00f3n se muestran gr\u00e1ficos y animaciones referentes a su significado. En la imagen siguiente se comparan los conceptos de movimientos angulares aplicados a una aeronave.</p> <p> <p> Movimientos angulares</p> <p></p>"},{"location":"UNO/externos/#material-necesario_3","title":"Material necesario","text":"<ul> <li>Placa Keyestudio UNO</li> <li>Sensor aceler\u00f3metro de tres ejes ADXL345 (Ks0012)</li> <li>Cable I2C o 4 cables dupont hembra-hembra</li> <li>Ordenador. Antes de empezar a utilizar la placa Keyestudio UNO, es necesario comprobar que nuestro dispositivo est\u00e9 listo para trabajar. Encontrar\u00e1s toda la informaci\u00f3n en Antes de.</li> </ul>"},{"location":"UNO/externos/#procedimiento_3","title":"Procedimiento","text":"<p>1. Conecta el sensor de ADXL345 al conector I2C utilizando un cable de tipo I2C o cuatro cables dupont hembra-hembra.</p> <p> <p> Conexionado</p> <p></p> <p>CUIDADO</p> <p>Si utilizas cables dupont, controla que cada cable conecte los terminales correspondientes de la placa y de la pantalla (GND con GND, VCC con VCC, SDA con SDA y SCL con SCL).</p> <p>Si utilizas un conector I2C ten cuidado de respetar el orden de los pines, es decir, que las conexiones son las mismas que con cables individuales.</p> <p>2. Ejecuta el programa AB-Connector. Recuerda que debe estar en ejecuci\u00f3n todo el rato mientras trabajas con Arduinoblocks. Iniciamos un nuevo proyecto de tipo \"UNO\".</p> <p>3. En la entrada \"Funciones\" tenemos las opciones disponibles de creaci\u00f3n de funciones, sin retorno y con retorno de valor. Crear una funci\u00f3n es tan sencillo como arrastrar el bloque a la zona de programa, ponerle un nombre descriptivo y en su interior crear el programa que se ejecutar\u00e1 cada vez que la invoquemos. Para invocar a la funci\u00f3n se crea un bloque, que inicialmente no existe, con el nombre de la funci\u00f3n. Para el ejemplo que estamos resolviendo est\u00e9 men\u00fa quedar\u00e1 as\u00ed:</p> <p> <p> Proyecto KS_UNO_acelerometro. Funciones</p> <p></p> <p>4. Vamos a trabajar con la consola serie para mostrar los \u00e1ngulos de Pitch y Roll y con el plotter serie para mostrar graficamente las aceleraciones en los tres ejes. Adem\u00e1s, para que el c\u00f3digo quede mejor ordenado, vamos a crear funciones que realizar\u00e1n las tareas de leer el sensor, enviar los \u00e1ngulos a la consola y las aceleraciones al plotter. El programa quedar\u00e1 as\u00ed:</p> <p> <p> Proyecto KS_UNO_acelerometro</p> <p></p> <p>Ahora podemos ver de forma completa las funciones definidas y como son invocadas.</p> <p>5. Si subimos el programa tal cual est\u00e1 se van a mezclar los datos de consola y plotter ya que son enviados por el puerto serie todos. Arduinoblocks dispone de la posibilidad de activar y desactivar (comentar) bloques para poder hacer que formen, o no, parte del programa. En la animaci\u00f3n siguiente vemos como activar y desactivar bloques.</p> <p> <p> Proyecto KS_UNO_acelerometro. Activar/desactivar bloques</p> <p></p> <p>6. Desactivamos la llamada a la funci\u00f3n aceleraciones y subimos el proyecto a la placa. Comenzamos por enviar datos a la consola y vemos los valores medidos por el sensor gir\u00e1ndolo en alabeo y cabeceo.</p> <p> <p> Proyecto KS_UNO_acelerometro. Consola</p> <p></p> <p>7. Activamos la llamada a la funci\u00f3n aceleraciones y desactivamos la llamada a la funci\u00f3n \u00e1ngulos y subimos el proyecto a la placa. Comenzamos a enviar datos al plotter y vemos las gr\u00e1ficas de los valores medidos por el sensor movi\u00e9ndolo en la direcci\u00f3n de cada eje.</p> <p> <p> Proyecto KS_UNO_acelerometro. Plotter</p> <p></p> <p>Si necesitamos mas opciones de medida podemos recurrir al modelo Aceler\u00f3metro y Giroscopio MPU6050 que combina un giroscopio MEMS de 3 ejes con un aceler\u00f3metro MEMS de 3 ejes y un procesador DMP (Digital Motion Processor) interno que ejecuta c\u00e1lculos para combinar las mediciones de los sensores internos.</p>"},{"location":"UNO/keyestudio_UNO/","title":"Retos Keyestudio UNO","text":""},{"location":"UNO/keyestudio_UNO/#nivel-i-detector-de-movimiento","title":"NIVEL I. Detector de movimiento","text":"<p>En primer lugar, conecta la tira de leds Neopixel en uno de los pines GVS, por ejemplo el pin D2, de la placa Keyestudio UNO como en la siguiente imagen:</p> <p> <p> </p> <p></p> <p>Es necesario que el cable negro (GND) del sensor coincida con el pin negro (GND) de la placa Keyestudio UNO para que la conexi\u00f3n sea correcta.</p> <p>Para programar la tira de leds Neopixel, primero toma este bloque de programaci\u00f3n de la categor\u00eda Visualizaci\u00f3n - Neopixel</p> <p> <p> </p> <p></p> <p>Colocalo dentro del bloque \u201cInicializar\u201d e indica que hay 10 leds en la tira de leds Neopixel conectados al pin 2 de la placa Keyestudio UNO. El bloque \u201cInicializar\u201d deber\u00eda quedar as\u00ed:</p> <p> <p> </p> <p></p> <p>Seguidamente, toma el bloque de programaci\u00f3n condicional \"si / si no\" de la categor\u00eda \u201cL\u00f3gica\u201d y col\u00f3calo dentro del \u201cbucle\u201d principal. La estructura queda de la siguiente forma:</p> <p> <p> </p> <p></p> <p>Hecho esto, conecta el sensor de movimiento PIR en uno de los pines GVS, por ejemplo el pin D8, de la placa Keyestudio UNO como en la siguiente imagen:</p> <p> <p> </p> <p></p> <p>Coloca el bloque de programaci\u00f3n \u201cDetector de movimiento (PIR)\u201d de la categor\u00eda \"Sensores\" en la condici\u00f3n del bloque condicional. Indica que el sensor \u201clectura del sensor de movimiento PIR\u201d est\u00e1 conectado al pin 8. Col\u00f3calo dentro del bloque de programaci\u00f3n condicional \u201cs\u00ed\u201d para que cuando el sensor detecte un movimiento se ejecute una acci\u00f3n. Y si no detecta ninguna, se ejecute otra.</p> <p> <p> </p> <p></p> <p>Por \u00faltimo, y para cada caso, coloca un bloque de programaci\u00f3n \u201cContar con\u201d de la categor\u00eda \u201cControl\u201d para que se pongan todos los leds de la tira de Neopixel de un mismo color. Cambia el nombre de la variable \u201ci\u201d del contador por LEDs\u201d y col\u00f3cala dentro del bloque de programaci\u00f3n \u201cEstablecer pixel #\u201d. Indica que el contador vaya del n\u00famero 0 al 9 para que encienda los 10 leds de la tira de Neopixel. En caso de que se detecte movimiento, puedes programar que los leds Neopixel se enciendan de color rojo. Y si no se detecta, que se enciendan de color verde.</p> <p> <p> </p> <p></p> <p>Para que las luces se enciendan habr\u00e1 que a\u00f1adir el bloque \"Mostrar\" que encontraremos en la categor\u00eda Visualizaci\u00f3n - Neopixel. Lo a\u00f1adiremos despu\u00e9s de establecer de qu\u00e9 color queremos los pixels.</p> <p>El programa final quedar\u00e1 as\u00ed:</p> <p> <p> Descargar: NIVEL I. Detector de movimiento</p> <p></p>"},{"location":"UNO/keyestudio_UNO/#nivel-ii-control-de-humedad","title":"NIVEL II. Control de humedad","text":"<p>Lo primero de todo, crea una variable denominada Humedad desde el men\u00fa \"Variables\".</p> <p> <p> </p> <p></p> <p>Coloca el bloque de programaci\u00f3n \"Establecer Humedad\" de la categor\u00eda \"Variables\" dentro del bloque \"Inicializar\" para empezar el programa con un valor de la variable \"0\".</p> <p> <p> </p> <p></p> <p>Despu\u00e9s, conecta el sensor de humedad a la Keyestudio UNO, por ejemplo en el pin A5, ya que es un sensor anal\u00f3gico, como en la siguiente imagen. Es necesario que el cable negro (GND) del sensor coincida con el pin negro (GND) de la placa para que la conexi\u00f3n sea correcta.</p> <p> <p> </p> <p></p> <p>Y conecta la tira de leds Neopixel en uno de los pines GVS, por ejemplo el pin 4, de la placa Keyestudio UNO como en la siguiente imagen:</p> <p> <p> </p> <p></p> <p>Seguidamente, para iniciar la tira de leds Neopixel, configura los leds mediante este bloque de programaci\u00f3n de la categor\u00eda Visualizaci\u00f3n - Neopixel</p> <p> <p> </p> <p></p> <p>Col\u00f3calo dentro del bloque \u201cInicializar\u201d e indica el n\u00famero de leds Neopixel conectados al pin 4 de la placa Keyestudio UNO tienen 10 leds. El bloque \u201cInicializar\u201d deber\u00eda quedar as\u00ed tras los pasos dados:</p> <p> <p> </p> <p></p> <p>Coloca dentro del \"bucle\" principal el bloque de la variable creada con el bloque de programaci\u00f3n \"Sonda de humedad\" de la categor\u00eda \"Sensores\" indicando que est\u00e1 conectado al pin A5 y las unidades en %.</p> <p> <p> </p> <p></p> <p>Seguidamente, toma el bloque de programaci\u00f3n condicional \"si / si no\" de la categor\u00eda \u201cL\u00f3gica\u201d y col\u00f3calo dentro del \u201cbucle\u201d principal. La estructura queda de la siguiente forma:</p> <p> <p> </p> <p></p> <p>Pulsa en el s\u00edmbolo \u201c+\u201d para crear m\u00e1s condiciones:</p> <p> <p> </p> <p></p> <p>Despu\u00e9s, coloca un bloque de comparaci\u00f3n y el bloque booleano \u201cy\u201d de la categor\u00eda \"L\u00f3gica\" en la condici\u00f3n \"si\" y \"si no, si\" respectivamente. Uno de los elementos de la comparaci\u00f3n debe ser el bloque del valor de la variable \u201cHumedad\u201d y el otro, los valores de la humedad que queramos establecer, por ejemplo \u201c30\u201d y \u201c60\u201d. De esta forma, define el l\u00edmite inferior (30), el l\u00edmite superior (60) y el rango intermedio (entre 30 y 60).</p> <p> <p> </p> <p></p> <p>Por \u00faltimo, y para cada caso, coloca un bloque de programaci\u00f3n \u201cContar con\u201d de la categor\u00eda \u201cControl\u201d para que se pongan todos los leds de la tira de Neopixel de un mismo color. Cambia el nombre de la variable \u201ci\u201d del contador por \u201cLEDs\u201d y col\u00f3cala dentro del bloque de programaci\u00f3n \u201cEstablecer pixel #\u201d. Indica que el contador vaya del n\u00famero 0 al 7 para que encienda 8 leds de la tira de Neopixel.</p> <p>Para que las luces se enciendan habr\u00e1 que a\u00f1adir el bloque \u201cMostrar\u201d que encontraremos en la categor\u00eda Visualizaci\u00f3n - Neopixel. Lo a\u00f1adiremos despu\u00e9s de establecer de qu\u00e9 color queremos los pixels.</p> <p>El bloque condicional debe quedar as\u00ed:</p> <p> <p> </p> <p></p> <p>Por \u00faltimo, y para dar tiempo a la lectura del sensor, a\u00f1ade una pausa con el bloque de programaci\u00f3n \u201cEsperar (ms)\u201d.</p> <p>Ten en cuenta que el valor que debes escribir en este bloque indica un valor de tiempo con unidades en milisegundos. Por tanto, si queremos indicar una pausa de 1 segundo, es necesario escribir un valor de 1000 en el mismo.</p> <p>El programa completo queda as\u00ed:</p> <p> <p> Descargar: NIVEL II. Control de humedad</p> <p></p>"},{"location":"UNO/keyestudio_UNO/#nivel-iii-barrera-automatica","title":"NIVEL III. Barrera autom\u00e1tica","text":"<p>En este reto, crea un programa que levante una barrera accionada por el servomotor en funci\u00f3n de si detecta o no un objeto a cierta distancia en cent\u00edmetros gracias al sensor de ultrasonidos.</p> <p>Utiliza los siguientes bloques de programaci\u00f3n para realizar este reto:</p> <p> <p> </p> <p></p> <p>POSIBLE SOLUCI\u00d3N</p> <p>El primer paso que debes dar es conectar el sensor de ultrasonidos a la Keyestudio UNO. Este sensor tiene cuatro cables de conexi\u00f3n: uno de tierra GND, otro de voltaje VCC y dos de se\u00f1al (Trig y Echo). Por tanto, debes realizar la conexi\u00f3n a la Keyestudio UNO formando una \u201cL\u201d, tal y como se indica en la imagen. Indica cm como unidades de la lectura de distancia y los pines de se\u00f1al donde hayas conectado los cables de Trig (emisor) y Echo (receptor) en el bloque de programaci\u00f3n del sensor de ultrasonidos. Puedes conectarlos a los pines 2 y 3, por ejemplo, de la hilera de pines GVS como en la siguiente imagen:</p> <p> <p> </p> <p></p> <p>Tambi\u00e9n conecta el servomotor en uno de los pines GVS de la hilera de conexiones de la Keyestudio UNO, por ejemplo el pin 4.</p> <p> <p> </p> <p></p> <p>Preparados los componentes, es hora de realizar el programa. Dentro del \"bucle\" principal coloca el bloque de programaci\u00f3n \"si hacer\". Dentro de este condicional, a\u00f1ade el bloque de comparaci\u00f3n de la categor\u00eda l\u00f3gica. Uno de los elementos de la comparaci\u00f3n debe ser el bloque de lectura del sensor de ultrasonidos ya configurado y el otro, el valor de la distancia, que en este caso puede ser de 10 cent\u00edmetros, para detectar cu\u00e1ndo un objeto est\u00e1 cerca de la barrera. El bloque para escribir un valor num\u00e9rico se encuentra dentro de la categor\u00eda \u201cMatem\u00e1ticas\u201d. El programa en este punto deber\u00eda estar as\u00ed:</p> <p> <p> </p> <p></p> <p>A continuaci\u00f3n, de la categor\u00eda \u201cMotor - Servo\u201d selecciona el bloque de programaci\u00f3n \u201cServo\u201d. Col\u00f3calo dentro del bloque condicional \u201csi\u201d para que cuando se detecte una distancia menor de 10 cent\u00edmetros el servomotor haga un movimiento. Por ejemplo, programa que se mueva primero en la posici\u00f3n angular 90\u00ba. Indica que has conectado el servomotor al pin 4.</p> <p>En este momento el programa deber\u00eda estar as\u00ed:</p> <p> <p> </p> <p></p> <p>Sin embargo, es necesario devolver al servomotor a su posici\u00f3n inicial, por lo que hay que a\u00f1adir el bloque \u201cEsperar\u201d. Decide cu\u00e1l es el tiempo \u00f3ptimo a \"esperar\", normalmente se toma 1.000 milisegundos (1 segundo). Seguidamente, a\u00f1ade el bloque del servomotor que lo devuelve a su posici\u00f3n inicial. Por tanto, el programa del bucle principal queda de la siguiente manera:</p> <p> <p> </p> <p></p> <p>Para asegurar que el servomotor realice un movimiento de forma correcta, es necesario \u201creinicializarlo\u201d al iniciar el programa. Por eso, en el bloque \u201cInicializar\u201d, coloca el bloque de programaci\u00f3n del servomotor para que se inicie en la posici\u00f3n 0\u00ba.</p> <p> <p> </p> <p></p> <p>El programa completo de este reto queda as\u00ed:</p> <p> <p> Descargar: NIVEL III. Barrera autom\u00e1tica</p> <p></p>"},{"location":"UNO/keyestudio_UNO/#nivel-iv-contaminacion-acustica","title":"NIVEL IV. Contaminaci\u00f3n ac\u00fastica","text":"<p>Crea un programa capaz de emitir una alerta cuando detecte un nivel de sonido excesivo mediante el sensor de sonido, un LED verde y un LED rojo.</p> <p>Para empezar, conecta el sensor de sonido anal\u00f3gico a uno de los pines A0-A5 de la placa Keyestudio UNO. Por ejemplo, puedes conectar el cable GVS al pin A0. Es necesario que el cable negro (GND) del sensor de sonido coincida con el pin azul (GND) de la placa Keyestudio UNO.</p> <p> <p> </p> <p></p> <p>Conecta los leds a la hilera de pines de entradas y salidas digitales GVS. Por ejemplo, conecta los cables GVS del LED rojo en el pin P0 y el LED verde en el pin P1. Comprueba que el cable negro (GND) del LED coincida con el pin azul (GND) de la placa Keyestudio UNO.</p> <p> <p> </p> <p></p> <p>Inicia un nuevo programa en steamakerblocks a\u00f1adiendo el bloque de programaci\u00f3n condicional \"si / hacer / si no\" que encontrar\u00e1s en la categor\u00eda de \"L\u00f3gica\". Como el objetivo es que este condicional funcione en todo momento, deber\u00e1s introducirlo dentro del bloque \u201cBucle\u201d que aparece al iniciar un proyecto:</p> <p> <p> </p> <p></p> <p>A continuaci\u00f3n, debes introducir un comparador para medir el nivel de sonido del sensor y compararlo con un valor determinado, que ser\u00e1 el valor umbral. En la categor\u00eda \u201cL\u00f3gica\u201d arrastra el bloque de comparaci\u00f3n de valores num\u00e9ricos en el lado derecho del \u201cs\u00ed\u201d y cambia el s\u00edmbolo \u201c=\u201d (igual) por el de \u201c&lt;\u201d (menor que).</p> <p> <p> </p> <p></p> <p>En \u201cSensores\u201d arrastra el bloque \u201cNivel de sonido Pin A0 %\u201d y sit\u00faalo en el primer espacio del comparador. Despliega el campo donde aparece el porcentaje para dejarlo en de \"0..1023\".</p> <p>En \u201cMatem\u00e1ticas\u201d arrastra un bloque para a\u00f1adir un n\u00famero y sit\u00faalo despu\u00e9s del s\u00edmbolo \u201c&lt;\u201d (menor que) del comparador. Cambia el valor \u201c0\u201d por \u201c700\u201d, como ejemplo de umbral que determinemos (el sensor de sonido anal\u00f3gico proporciona valores entre 0 y 1023).</p> <p> <p> </p> <p></p> <p>Ahora define el comportamiento de los leds. Arrastra el bloque \"Led Pin 2 Estado ON\" que encontrar\u00e1s en \"Actuadores\" y sit\u00faalo en el lado derecho de \"hacer\". Dupl\u00edcalo, o arrastra de nuevo el bloque, y encajalo debajo del anterior. Para encender el LED verde y apagar el LED rojo (el valor del sensor no supera el umbral) deber\u00e1s poner el pin 2 en \u201cEstado OFF\u201d y el pin 3 en \u201cEstado ON\u201d en cada uno de los bloques dentro de \u201chacer\u201d.</p> <p>Duplica de nuevo los bloques y sit\u00faalos en el lado derecho del \u201csi no\u201d. Cambia los estados de los pines: ahora el LED rojo (pin 2) estar\u00e1 encendido (\u201cON\u201d) cuando el nivel de sonido supere el valor umbral y el LED verde (pin 3) estar\u00e1 apagado (\u201cOFF\u201d).</p> <p> <p> Descargar: NIVEL IV. Contaminaci\u00f3n ac\u00fastica</p> <p></p>"},{"location":"UNO/keyestudio_UNO/#nivel-v-trasvase-de-agua","title":"NIVEL V. Trasvase de agua","text":"<p>Consigue trasvasar agua de un vaso a otro mediante la bomba de agua y el rel\u00e9 utilizando un pulsador.</p> <p>Antes de empezar a programar es esencial que conectes adecuadamente el pulsador, el rel\u00e9 y la bomba de agua con la placa Keyestudio UNO.</p> <p>Primero, conecta el pulsador a la placa Keyestudio UNO mediante los pines GVS de la hilera de conexiones. Puedes utilizar, por ejemplo, el pin 2. Luego conecta el rel\u00e9 a la placa en la misma hilera. Puedes conectarlo al siguiente pin, el pin 3, por ejemplo. Comprueba que el cable negro (GND) del rel\u00e9 coincida con el pin azul (GND) de la Keyestudio UNO para garantizar una conexi\u00f3n correcta.</p> <p>A continuaci\u00f3n conecta uno de los cables de la bomba de agua a un pin GND de la placa Keyestudio UNO. El otro cable de la bomba debes conectarlo al conector central de salida del rel\u00e9. Para finalizar, quita el cabezal de pl\u00e1stico de un extremo de un cable hembra-hembra y con\u00e9ctalo desde el conector de salida del rel\u00e9 hasta un pin VCC de la placa Keyestudio UNO. Esto dejar\u00e1 el circuito en abierto y permitir\u00e1 que, al activarse el rel\u00e9, el circuito se cierre y, en consecuencia, la bomba se active.</p> <p> <p> </p> <p></p> <p>Inicia un nuevo programa en steamakerblocks a\u00f1adiendo el bloque de programaci\u00f3n condicional \"si / hacer / si no\" que encontrar\u00e1s en la categor\u00eda de \"L\u00f3gica\". Como el objetivo es que este condicional funcione en todo momento, deber\u00e1s introducirlo dentro del bloque \u201cBucle\u201d que aparece al iniciar un proyecto:</p> <p> <p> </p> <p></p> <p>A continuaci\u00f3n, debes introducir la condici\u00f3n a evaluar para ejecutar una acci\u00f3n u otra, que en este caso consiste en que si el pulsador est\u00e1 pulsado, se activa el rel\u00e9 y, por tanto, se pone en funcionamiento la bomba de agua, y si no lo est\u00e1, no funciona. Encontrar\u00e1s este bloque en el apartado \u201cSensores\u201d con el nombre de \u201cPulsador\u201d. Tienes que colocarlo en el conector justo al lado del \u201csi\u201d, y el programa quedar\u00e1 configurado de la siguiente manera:</p> <p> <p> </p> <p></p> <p>En este punto falta definir, por un lado, qu\u00e9 pasar\u00e1 cuando se pulse el pulsador, y por otro, qu\u00e9 pasar\u00e1 cuando se deje de pulsar. Toma el bloque de programaci\u00f3n para controlar el rel\u00e9 de la categor\u00eda \u201cActuadores\u201d, col\u00f3calo en cada caso del condicional. Indica que el rel\u00e9 est\u00e1 conectado al pin 3 y que si el pulsador est\u00e1 pulsado, el estado del rel\u00e9 debe estar en \u201cON\u201d, y si no lo est\u00e1, en \u201cOFF\u201d.</p> <p>El programa quedar\u00e1 configurado de la siguiente forma:</p> <p> <p> Descargar: NIVEL V. Trasvase de agua</p> <p></p>"},{"location":"UNO/lcd/","title":"Pantalla LCD 1602","text":"<p>Aqu\u00ed encontrar\u00e1s informaci\u00f3n e instrucciones para conectar y mostrar textos o im\u00e1genes en una pantalla de tipo LCD 1602.</p> <p>Para saber mas sobre la LCD 1602 puedes consultar Pantalla LCD 1602 I2C.</p> <p>Por seguridad</p> <p>Es muy conveniente tener la placa desprovista de cualquier tipo de alimentaci\u00f3n mientras realizamos el conexionado de elementos. En caso contrario se pueden producir despefectos irreversibles en cualquiera de los elementos.</p>"},{"location":"UNO/lcd/#material-necesario","title":"Material necesario","text":"<ul> <li>Placa Keyestudio UNO</li> <li>Pantalla LCD 1602 I2C</li> <li>Cable I2C o 4 cables dupont hembra-hembra</li> <li>Ordenador. Antes de empezar a utilizar la placa ESP32 STEAMakers, es necesario comprobar que nuestro dispositivo est\u00e9 listo para trabajar. Encontrar\u00e1s toda la informaci\u00f3n en Antes de.</li> </ul>"},{"location":"UNO/lcd/#procedimiento","title":"Procedimiento","text":"<p>1. Comenzamos conectando la pantalla LCD a la placa a trav\u00e9s de los pines de comunicaci\u00f3n I2C seg\u00fan muestra la imagen siguiente:</p> <p> <p> Conexionado</p> <p></p> <p>Puedes hacer las conexiones con un cable I2C o utilizando cuatro cables dupont hembra-hembra.</p> <p>CUIDADO</p> <p>Si utilizas cables dupont, controla que cada cable conecte los terminales correspondientes de la placa y de la pantalla (GND con GND, VCC con VCC, SCL con SCL y SDA con SDA).</p> <p>Si utilizas un conector I2C ten cuidado de respetar el orden de los pines, es decir, que las conexiones son las mismas que con cables individuales.</p> <p>2. Sigue con la programaci\u00f3n con Arduinoblocks: Ejecuta el programa AB-Connector. Recuerda que debe estar en ejecuci\u00f3n todo el rato mientras trabajas con Arduinoblocks.</p> <p>3. Ve a ArduinoBlocks, inicia sesi\u00f3n y comienza un nuevo proyecto del tipo \u201cUNO\u201d:</p> <p> <p> Proyecto KS_UNO_LCD. Creaci\u00f3n</p> <p></p> <p>4. Para utilizar la pantalla LCD, primero debes inicializarla. En el bloque \u201cInicializar\u201d, sit\u00faa un bloque \u201cLCD Iniciar I2C\u201d, que encontrar\u00e1s en la categor\u00eda \"Visualizaci\u00f3n/Pantalla LCD (I2C)\". Pon tambi\u00e9n el bloque \u201cLimpiar\u201d para asegurar que la pantalla no tenga nada escrito al inicio.</p> <p> <p> Proyecto KS_UNO_LCD. Inicializar</p> <p></p> <p>5. A continuaci\u00f3n, en el bloque \u201cBucle\u201d, sit\u00faa alguno de los bloques de visualizaci\u00f3n de la pantalla LCD, en funci\u00f3n de lo que desees mostrar. Comienza mostrando el texto \u201cHola\u201d, con el bloque \"LCD #1 Imprimir...\":</p> <p> <p> Proyecto KS_UNO_LCD. Hola</p> <p></p> <p>Haz clic en el bot\u00f3n \u201cSubir\u201d situado arriba a la derecha, verificando primero que el puerto seleccionado sea correcto:</p> <p> <p> Proyecto KS_UNO_LCD. Subir</p> <p></p> <p>6. Vamos a crear dos s\u00edmbolos propios, un mu\u00f1equito y una letra \"i\" pero acentuada. La definici\u00f3n del s\u00edmbolo la copiamos en un bloque \"LCD #1 Definir s\u00edmbolo...\" y le asignamos el n\u00famero 1 y al de la letra \"i\" le asignamos el n\u00famero 2. Estos bloques de definici\u00f3n se ponen en \"Inicializar\".</p> <p> <p> Proyecto KS_UNO_LCD.S\u00edmbolos</p> <p></p> <p>7. De la categor\u00eda Visualizaci\u00f3n/Pantalla LCD I2C, elige el bloque \u201cLCD #1 Imprimir\u2026\u201d y lo colocas un par de veces de manera que en uno aparezca el texto \"Hola desde\" en la fila 0 y en el otro \"Keyestudio UNO\" en la fila 1. Ahora, a\u00f1ade una espera de 2 segundos (2000 milisegundos). Cambia el valor a 2000. Para a\u00f1adir la espera de 2 segundos, ve a la categor\u00eda \u201cTiempo\u201d y elige el bloque \u201cEsperar 1000 milisegundos\u201d. Haz que se limpie la pantalla y que a continuaci\u00f3n se muestre la letra \"S\" en la fila 0 y columna 0. A continuaci\u00f3n, de la categor\u00eda Visualizaci\u00f3n/Pantalla LCD I2C, elige el bloque \u201cLCD #1 Imprimir\u2026 S\u00edmbolo\u2026\u201d y pon el n\u00famero correspondiente a la letra \"i\" ajustando la columna a 1. Ahora ponemos a partir de la columna 2 el resto del texto (\"mbolo\"). Ya solamente queda colocar en la fila uno la definici\u00f3n del s\u00edmbolo del mu\u00f1equito. Pon otra espera de 2 segundos. El c\u00f3digo completo de la programaci\u00f3n debe quedar as\u00ed:</p> <p> <p> Proyecto KS_UNO_LCD</p> <p></p>"},{"location":"UNO/lcd/#funcionamiento","title":"Funcionamiento","text":"<p>En la animaci\u00f3n podemos observar el programa en funcionamiento:</p> <p> <p> Proyecto KS_UNO_LCD</p> <p></p>"},{"location":"UNO/mando/","title":"Programar el mando a distancia","text":"<p>En esta ocasi\u00f3n vamos a trabajar con el Kit Imagina TdR STEAM basado en la placa tipo Arduino UNO en el que ya disponemos del mando y del sensor.</p> <p>Es conveniente repasar los contendiso explicados en Emisor y receptor de infrarrojos y en Placa TdR-STEAM y keyestudio UNO puesto que vamos a utilizar el mando y el sensor de ese conjunto.</p> <p>Por seguridad</p> <p>Es muy conveniente tener la placa desprovista de cualquier tipo de alimentaci\u00f3n mientras realizamos el conexionado de elementos. En caso contrario se pueden producir despefectos irreversibles en cualquiera de los elementos.</p>"},{"location":"UNO/mando/#material-necesario","title":"Material necesario","text":"<ul> <li>Kit Imagina TdR STEAM basado en la placa tipo Arduino UNO</li> <li>Ordenador. Antes de empezar a utilizar la placa Keyestudio UNO, es necesario comprobar que nuestro dispositivo est\u00e9 listo para trabajar. Encontrar\u00e1s toda la informaci\u00f3n en Antes de</li> </ul>"},{"location":"UNO/mando/#procedimiento","title":"Procedimiento","text":"<p>1. Ejecuta el programa AB-Connector. Recuerda que debe estar en ejecuci\u00f3n todo el rato mientras trabajas con Arduinoblocks. Iniciamos un nuevo proyecto de tipo \"UNO\".</p> <p>2. Partimos de los componentes del kit ya conectados. Procede a crear una variable de tipo texto  entrando en la categoria \"Variables\". Debe ser de tipo texto porque el c\u00f3digo que se recibir\u00e1 del mando es un texto en formato hexadecimal.</p> <p> <p> Proyecto KS_UNO_control_remoto. Crear variable</p> <p> Proyecto KS_UNO_control_remoto. Variable creada</p> <p></p> <p>IMPORTANTE:</p> <p>El sensor funciona a 5V. comprueba que tienes el interruptor selector de voltaje en la posici\u00f3n correcta:</p> <p> <p></p> <p></p> <p>3. A partir de aqu\u00ed vamos a hacer dos ejemplos diferentes que, l\u00f3gicamente deberemos subir en cada caso a la placa para probar su funcionamiento.</p>"},{"location":"UNO/mando/#ejemplos","title":"Ejemplos","text":"<p>Ejemplo 1</p> <p>Vamos a realizar un programa en el que si pulsamos la tecla Ok del control remoto se nos encienda el diodo LED rojo. </p> <p> <p> Proyecto KS_UNOyTdRSTEAM_control_remoto. Ejemplo 1</p> <p></p> <p>Sabemos que el diodo IR est\u00e1 recibiendo un c\u00f3digo porque junto al mismo hay un diodo LED rojo que parpadea.</p> <p>Ejemplo 2</p> <p>Vamos a realizar un programa en el que si pulsamos la tecla flecha izquierda envie a la consola el mensaje \"&lt;-\" y se se ha pulsado la tecla derecha \"-&gt;\".</p> <p> <p> Proyecto KS_UNO_control_remoto. Ejemplo 2</p> <p></p> <p>IMPORTANTE:</p> <p>Puede que no te funcione porque que tengas seleccionado un valor incorrecto del modelo del mando en el bloque correspondiente. Si este fuera el caso, cambia al valor alternativo y vuelva a intentarlo.</p> <p> <p></p> <p></p>"},{"location":"UNO/oled/","title":"Pantalla OLED","text":"<p>Aqu\u00ed encontrar\u00e1s informaci\u00f3n e instrucciones para conectar y mostrar textos o im\u00e1genes en una pantalla de tipo OLED de 0.96\" de 128x64 pixels.</p> <p>Para saber mas sobre la OLED puedes consultar Pantalla OLED.</p> <p>Por seguridad</p> <p>Es muy conveniente tener la placa desprovista de cualquier tipo de alimentaci\u00f3n mientras realizamos el conexionado de elementos. En caso contrario se pueden producir despefectos irreversibles en cualquiera de los elementos.</p>"},{"location":"UNO/oled/#material-necesario","title":"Material necesario","text":"<ul> <li>Placa Keyestudio UNO</li> <li>Pantalla OLED 0.96\"</li> <li>Cable I2C o 4 cables dupont hembra-hembra</li> <li>Ordenador. Antes de empezar a utilizar la placa Keyestudio UNO, es necesario comprobar que nuestro dispositivo est\u00e9 listo para trabajar. Encontrar\u00e1s toda la informaci\u00f3n en Antes de.</li> </ul>"},{"location":"UNO/oled/#procedimiento","title":"Procedimiento","text":"<p>1. Comenzamos conectando la pantalla OLED a la placa a trav\u00e9s de los pines de comunicaci\u00f3n I2C seg\u00fan muestra la imagen siguiente:</p> <p> <p> Conexionado</p> <p></p> <p>Puedes hacer las conexiones con un cable I2C o utilizando cuatro cables dupont hembra-hembra.</p> <p>CUIDADO</p> <p>Si utilizas cables dupont, controla que cada cable conecte los terminales correspondientes de la placa y de la pantalla (GND con GND, VCC con VCC, SCL con SCL y SDA con SDA).</p> <p>Si utilizas un conector I2C ten cuidado de respetar el orden de los pines, es decir, que las conexiones son las mismas que con cables individuales.</p> <p>2. Sigue con la programaci\u00f3n con ArduinoBlocks: Ejecuta el programa AB-Connector. Recuerda que debe estar en ejecuci\u00f3n todo el rato mientras trabajas con ArduinoBlocks.</p> <p>3. Ve a ArduinoBlocks, inicia sesi\u00f3n y comienza un nuevo proyecto del tipo \u201cUNO\u201d:</p> <p> <p> Proyecto KS_UNO_OLED. Creaci\u00f3n</p> <p></p> <p>4. Para utilizar la pantalla OLED, primero debes inicializarla. En el bloque \u201cInicializar\u201d, sit\u00faa un bloque \u201cOLED Iniciar I2C\u201d, que encontrar\u00e1s en la categor\u00eda \"Visualizaci\u00f3n/Pantalla OLED\". Pon tambi\u00e9n el bloque \u201cLimpiar\u201d para asegurar que la pantalla no tenga nada escrito al inicio.</p> <p> <p> Proyecto KS_UNO_OLED. Inicializar</p> <p></p> <p>5. A continuaci\u00f3n, en el bloque \u201cBucle\u201d, sit\u00faa alguno de los bloques de visualizaci\u00f3n de la pantalla OLED, en funci\u00f3n de lo que desees mostrar. Comienza mostrando el texto \u201cHola\u201d, con el bloque \u201cOLED #1 Text\u2026\u201d:</p> <p> <p> Proyecto KS_UNO_OLED. Hola</p> <p></p> <p>Haz clic en el bot\u00f3n \u201cSubir\u201d situado arriba a la derecha, verificando primero que el puerto seleccionado sea correcto:</p> <p> <p> Proyecto KS_UNO_OLED. Subir</p> <p></p> <p>6. Ahora, a\u00f1ade una espera de 2 segundos (2000 milisegundos), haz que se limpie la pantalla y que a continuaci\u00f3n se muestre una imagen. Para a\u00f1adir la espera de 2 segundos, ve a la categor\u00eda \u201cTiempo\u201d y elige el bloque \u201cEsperar 1000 milisegundos\u201d. Cambia el valor a 2000. A continuaci\u00f3n, de la categor\u00eda Visualizaci\u00f3n/Pantalla OLED, elige el bloque \u201cOLED #1 Bitmap\u2026\u201d y cargalo con una imagen. Poner otra espera de 2 segundos. El c\u00f3digo completo de la programaci\u00f3n debe quedar as\u00ed:</p> <p> <p> Proyecto KS_UNO_OLED</p> <p></p>"},{"location":"UNO/oled/#funcionamiento","title":"Funcionamiento","text":"<p>En la animaci\u00f3n podemos observar el programa en funcionamiento:</p> <p> <p> Proyecto KS_UNO_OLED</p> <p></p>"},{"location":"UNO/servos/","title":"Programar servomotores","text":"<p>Antes de nada se recomienda repasar los conceptos dados en Control de un servomotor y el uso de las listas de datos.</p> <p>Por seguridad</p> <p>Es muy conveniente tener la placa desprovista de cualquier tipo de alimentaci\u00f3n mientras realizamos el conexionado de elementos. En caso contrario se pueden producir despefectos irreversibles en cualquiera de los elementos.</p>"},{"location":"UNO/servos/#material-necesario","title":"Material necesario","text":"<ul> <li>Placa Keyestudio UNO</li> <li>Servomotor 9g negro con rotaci\u00f3n de 0 a 180 grados KS0194</li> <li>Pulsador t\u00e1ctil capacitivo (KS0031) o de bot\u00f3n (KS0029).</li> <li>Cable SVG o 3 cables dupont hembra-hembra</li> <li>Ordenador. Antes de empezar a utilizar la placa Keyestudio UNO, es necesario comprobar que nuestro dispositivo est\u00e9 listo para trabajar. Encontrar\u00e1s toda la informaci\u00f3n en Antes de</li> </ul>"},{"location":"UNO/servos/#procedimiento","title":"Procedimiento","text":"<p>1. Ejecuta el programa AB-Connector. Recuerda que debe estar en ejecuci\u00f3n todo el rato mientras trabajas con Arduinoblocks. Iniciamos un nuevo proyecto de tipo \"UNO\".</p> <p>2. Conecta el servomotor a alguno de los pines digital de la placa (en el ejemplo utilizaremos el pin D4), teniendo en cuenta que el cable marr\u00f3n del servomotor corresponde a la G -tierra- (color azul de la placa), el cable rojo del servomotor corresponde a la V -voltaje- (color rojo de la placa) y el cable naranja del servomotor corresponde al S -se\u00f1al- (color amarillo de la placa).</p> <p> <p> Proyecto KS_UNO_servo_conecta</p> <p></p> <p>3. Conecta el pulsador tambi\u00e9n a un pin digital (D3 en mi caso) teniendo especial cuidado que el orden de los pines sea el correcto.</p> <p>4. A partir de aqu\u00ed vamos a hacer dos ejemplos diferentes que, l\u00f3gicamente deberemos subir en cada caso a la placa para probar su funcionamiento.</p>"},{"location":"UNO/servos/#ejemplos","title":"Ejemplos","text":"<p>Ejemplo 1</p> <p>Vamos a crear un programa en el que cada vez que pulsemos el bot\u00f3n el servo gire un \u00e1ngulo de 10 grados. Si no activamos el pulsador el servo permanecer\u00e1 en su posici\u00f3n actual. La posici\u00f3n inicial del servo ser\u00e1 en cero grados y si se alcanzan los 180 grados de giro retornar\u00e1 a su posici\u00f3n inicial.</p> <p> <p> Proyecto KS_UNO_servo. Ejemplo 1</p> <p></p> <p>En la animaci\u00f3n vemos el programa funcionando.</p> <p> <p> Proyecto KS_UNO_servo. Funcionamiento Ejemplo 1</p> <p></p> <p>Ejemplo 2</p> <p>Vamos a crear un programa en el que si no activamos el bot\u00f3n el servo se mover\u00e1 entre 0 y 180 grados a int\u00e9rvalos de un segundo. Si el bot\u00f3n se acciona el servo se mover\u00e1 entre las posiciones fijadas en una lista creada al efecto.</p> <p> <p> Proyecto KS_UNO_servo. Ejemplo 2</p> <p></p> <p>En la animaci\u00f3n vemos el programa funcionando.</p> <p> <p> Proyecto KS_UNO_servo. Funcionamiento Ejemplo 2</p> <p></p>"},{"location":"UNO/tdrsteam/","title":"Placa TdR-STEAM y keyestudio UNO","text":"<p>Una alternativa que considero aconsejable para iniciarse en la programaci\u00f3n con la placa Keyestudio UNO es acompa\u00f1arla del escudo TdR STEAM. Es mas, es por donde aconsejar\u00eda comenzar.</p> <p>En la web Retos con TdR-STEAM y keyestudio UNO tienes disponible toda una colecci\u00f3n de retos y actividades realizadas con este conjunto de placas y alg\u00fan hardware adicional.</p> <p>La mayor\u00eda de retos y actividades se dan solucionadas para facilitar el aprendizaje,  pero se reta al lector a solucionar cada caso por si mismo y solamente recurrir a la soluci\u00f3n cuando resulte imprescindible.</p> <p>La descripci\u00f3n completa de la placa la podemos encontrar en el apartado espec\u00edfico que encontramos en el \u00edndice horizontal de esta web.</p> <p>El escudo tiene el aspecto que vemos en la imagen siguiente:</p> <p> <p> </p> <p></p>"},{"location":"UNO/tira/","title":"Programar una tira de LEDs","text":"<p>Para saber mas sobre tiras de LEDs RGB direccionables puedes consultar la web Tiras y matrices de LEDs.</p> <p>Por seguridad</p> <p>Es muy conveniente tener la placa desprovista de cualquier tipo de alimentaci\u00f3n mientras realizamos el conexionado de elementos. En caso contrario se pueden producir despefectos irreversibles en cualquiera de los elementos.</p>"},{"location":"UNO/tira/#material-necesario","title":"Material necesario","text":"<ul> <li>Placa Keyestudio UNO</li> <li>Tira de 8 LEDs</li> <li>Cable SVG o 3 cables dupont hembra-hembra</li> <li>Ordenador. Antes de empezar a utilizar la placa Keyestudio UNO, es necesario comprobar que nuestro dispositivo est\u00e9 listo para trabajar. Encontrar\u00e1s toda la informaci\u00f3n en Antes de.</li> </ul>"},{"location":"UNO/tira/#procedimiento","title":"Procedimiento","text":"<p>1. Ejecuta el programa AB-Connector. Recuerda que debe estar en ejecuci\u00f3n todo el rato mientras trabajas con Arduinoblocks. Iniciamos un nuevo proyecto de tipo \"UNO\".</p> <p>2. Conecta la tira de LEDs a alguno de los puertos digitales de la placa. En el ejemplo utilizamos el pin D13.</p> <p> <p> Proyecto KS_UNO_tiraLEDs_conecta</p> <p></p> <p>3. La tira de LEDs debe inicializarse. Para ello, ve a la categor\u00eda \u201cVisualizaci\u00f3n/NeoPixel\u201d y coloca el bloque \u201cIniciar GRB 800Khz\u2026\u201d. A continuaci\u00f3n, cambia el n\u00famero de p\u00edxeles al n\u00famero de pixeles de tu tira (8 en el ejemplo) y selecciona el pin al que has conectado la tira (en el ejemplo utilizamos el D13)</p> <p> <p> Proyecto KS_UNO_tiraLEDs_bloque_inicializar</p> <p></p> <p>A continuaci\u00f3n del bloque \u201cIniciar\u201d, coloca un bloque \u201cLimpiar\u201d, para asegurar que todos los LEDs est\u00e9n apagados cuando se inicie el programa.</p> <p>4. En esta misma categor\u00eda ver\u00e1s que hay varias opciones para trabajar con los LEDs de manera individual. Puedes establecer el color, el brillo, etc. Ten en cuenta que la numeraci\u00f3n comienza en \u201c0\u201d, por lo que los LEDs van desde el 0 hasta el 7.</p> <p> <p> Bloques de Neopixels</p> <p></p> <p>5. Si deseas iluminar un p\u00edxel en concreto de un color, s\u00f3lo tienes que situar el bloque \u201cEstablecer p\u00edxel #\u2026\u201d en el bloque \u201cBucle\u201d, indicar el n\u00famero del LED que deseas iluminar y a continuaci\u00f3n poner el bloque \u201cMostrar\u201d. A continuaci\u00f3n vemos como hacer parpadear en color rojo al LED 3.</p> <p> <p> Iluminar un pixel de un color</p> <p></p> <p>Puedes construir y subir el programa de la imagen anterior para probar su funcionamiento.</p> <p>6. Vamos a implementar como ejemplo un sem\u00e1foro. Haremos primero que los LEDs muestren el color rojo durante 2 segundos, a continuaci\u00f3n se apagar\u00e1n y se mostrar\u00e1n en color naranja durante 1 segundo. Por \u00faltimo, se apagar\u00e1n de nuevo y se mostrar\u00e1n de color verde durante 2 segundos, como si fuera un sem\u00e1foro. El encendido y apagado de todos los LEDs se resolver\u00e1 mediante bucles. Para empezar, de la categor\u00eda \"Control\", elije \"contar con...\" y establece el valor \"hasta\" en 7, dejando el resto como est\u00e1. Dentro del bucle, desde la categoria \u201cVisualizaci\u00f3n / NeoPixel\u201d, elije el bloque \u201cEstablecer p\u00edxel #\u201d, para definir el pixel a iluminar tras # debes poner la variable del bucle y define el color rojo. A continuaci\u00f3n, pon el bloque \u201cMostrar\u201d, seguido de una pausa de 2000 milisegundos (de la categor\u00eda \u201cTiempo\u201d). Para apagar los LEDs, repite el bucle de nuevo esta vez sin retardo y estableciendo el color negro, seguido del bloque \u201cMostrar\u201d. Los tiempos de espera se deben establecer fuera de los bucles para que todos los LEDs se enciendan al mismo tiempo. En caso contrario el retardo se producir\u00e1 en cada iteraci\u00f3n. Para que el cambio de color se aprecie a\u00fan mas podemos establecer un peque\u00f1o retardo tras el apagado. El programa completo es el siguiente:</p> <p> <p> Proyecto KS_UNO_tiraLEDs</p> <p></p>"},{"location":"UNO/ultrason/","title":"Programar el sensor de ultrasonidos","text":"<p>Antes de nada se recomienda repasar los conceptos dados en El sensor de ultrasonidos HC-SR04.</p> <p>Por seguridad</p> <p>Es muy conveniente tener la placa desprovista de cualquier tipo de alimentaci\u00f3n mientras realizamos el conexionado de elementos. En caso contrario se pueden producir despefectos irreversibles en cualquiera de los elementos.</p>"},{"location":"UNO/ultrason/#material-necesario","title":"Material necesario","text":"<ul> <li>Placa Keyestudio UNO</li> <li>Sensor de ultrasonidos HC-SR04</li> <li>Ordenador. Antes de empezar a utilizar la placa Keyestudio UNO, es necesario comprobar que nuestro dispositivo est\u00e9 listo para trabajar. Encontrar\u00e1s toda la informaci\u00f3n en Antes de</li> </ul>"},{"location":"UNO/ultrason/#procedimiento","title":"Procedimiento","text":"<p>1. Ejecuta el programa AB-Connector. Recuerda que debe estar en ejecuci\u00f3n todo el rato mientras trabajas con Arduinoblocks. Iniciamos un nuevo proyecto de tipo \"UNO\".</p> <p>2. Conecta el sensor a pines digitales de la placa (en el ejemplo utilizaremos el pin D2 para Trigger y D3 para Echo). Adem\u00e1s tienes que conectar los pines de alimentaci\u00f3n teniendo especial cuidado de que VCC se conecta con V y Gnd con G.</p> <p> <p> Proyecto KS_UNO_ultrasonidos. Conexionado</p> <p></p> <p>Hemos conectado el pin \u201cTrig\u201d del sensor al pin D2 de la placa y el pin \u201cEcho\u201d al pin D3, para hacerlos coincidir con los que indica el bloque que vamos a utilizar en Arduinoblocks. Si quieres puedes utilizar otros pines para realizar las conexiones, haciendo los cambios correspondientes en el bloque en Arduinoblocks. </p> <p>IMPORTANTE:</p> <p>El sensor funciona a 5V. comprueba que tienes el interruptor selector de voltaje en la posici\u00f3n correcta:</p> <p> <p></p> <p></p> <p>3. Vamos a crear un programa en el que cada segundo se env\u00ede a la consola una composici\u00f3n de texto de la forma \"Distancia medida: xx.xx cm\". El programa puede ser como el siguiente:</p> <p> <p> Proyecto KS_UNO_ultrasonidos</p> <p></p> <p>La consola nos mostrar\u00e1 resultados de la forma siguiente:</p> <p> <p> Consola de proyecto KS_UNO_ultrasonidos</p> <p></p>"}]}